openapi: 3.0.3
info:
  title: Contract Repayments Calculator API
  description: |
    Modern web application for calculating device contract repayments with user authentication.
    
    Features:
    - Calculate monthly repayments for 12, 24, and 36-month contracts
    - 6.5% interest rate
    - User registration and authentication
    - Mobile-responsive web interface
    - REST API endpoints
  version: 2.0.0
  contact:
    name: Contract Calculator Support
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080
    description: Local development server

tags:
  - name: Web Interface
    description: Web MVC endpoints for user interface
  - name: REST API
    description: REST API endpoints for programmatic access

paths:
  # Web MVC Endpoints
  /:
    get:
      tags:
        - Web Interface
      summary: Root redirect
      description: Redirects to the calculator page
      operationId: redirectToCalculator
      responses:
        '302':
          description: Redirect to calculator
          headers:
            Location:
              schema:
                type: string
                example: /calculator

  /calculator:
    get:
      tags:
        - Web Interface
      summary: Show calculator page
      description: Returns the main calculator web interface
      operationId: showCalculator
      responses:
        '200':
          description: Calculator page successfully returned
          content:
            text/html:
              schema:
                type: string
                description: HTML page with calculator form

  /login:
    get:
      tags:
        - Web Interface
      summary: Show login page
      description: Returns the login form
      operationId: showLogin
      responses:
        '200':
          description: Login page successfully returned
          content:
            text/html:
              schema:
                type: string

  /register:
    get:
      tags:
        - Web Interface
      summary: Show registration page
      description: Returns the user registration form
      operationId: showRegister
      responses:
        '200':
          description: Registration page successfully returned
          content:
            text/html:
              schema:
                type: string
    post:
      tags:
        - Web Interface
      summary: Register new user (Web Form)
      description: Process user registration from web form
      operationId: registerUserWeb
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerDetails'
      responses:
        '200':
          description: Registration processed (success or error page)
          content:
            text/html:
              schema:
                type: string
        '302':
          description: Redirect to login page on success
          headers:
            Location:
              schema:
                type: string
                example: /login

  /calculate:
    get:
      tags:
        - Web Interface
      summary: Calculate repayments (Web)
      description: Calculate repayments and show results page
      operationId: calculateResultsWeb
      parameters:
        - name: amount
          in: query
          required: true
          description: Device amount to finance
          schema:
            type: number
            format: double
            minimum: 100
            maximum: 100000
            example: 15000.00
      responses:
        '200':
          description: Results page with calculations
          content:
            text/html:
              schema:
                type: string
        '400':
          description: Invalid amount - returns calculator page with error
          content:
            text/html:
              schema:
                type: string

  # REST API Endpoints
  /api/v1/contracts/repayments:
    get:
      tags:
        - REST API
      summary: Calculate device repayment options
      description: |
        Calculates monthly repayments for a device over 12, 24, and 36 month periods.
        
        **Interest Rate:** 6.5% per annum
        
        **Payment Terms:** 12, 24, 36 months
        
        **Amount Range:** R100 - R100,000
      operationId: calculateRepayments
      parameters:
        - name: amount
          in: query
          required: true
          description: Device amount to finance (ZAR)
          schema:
            type: number
            format: double
            minimum: 1
            maximum: 100000
            example: 15000.00
      responses:
        '200':
          description: Successful calculation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentResult'
              example:
                - paymentPeriods: 12
                  monthlyPayments: 1312.50
                  totalPayment: 15750.00
                - paymentPeriods: 24
                  monthlyPayments: 687.50
                  totalPayment: 16500.00
                - paymentPeriods: 36
                  monthlyPayments: 479.17
                  totalPayment: 17250.00
        '400':
          description: Invalid amount provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                message: "Amount must be greater than 0"
                timestamp: "2024-01-15T10:30:00Z"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/contracts/register:
    post:
      tags:
        - REST API
      summary: Register new user (API)
      description: Register a new user via REST API
      operationId: registerUserApi
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerDetails'
            example:
              name: "John Doe"
              email: "john.doe@example.com"
      responses:
        '201':
          description: User successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User registered successfully"
        '400':
          description: Invalid user details or email already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Email already registered"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    CustomerDetails:
      type: object
      required:
        - email
        - name
      properties:
        email:
          type: string
          format: email
          example: "john.doe@example.com"
          description: User's email address (used for login)
          minLength: 5
          maxLength: 100
        name:
          type: string
          example: "John Doe"
          description: User's full name
          minLength: 2
          maxLength: 50
          pattern: "^[A-Za-z\\s]+$"
      description: Customer registration details

    PaymentResult:
      type: object
      required:
        - paymentPeriods
        - monthlyPayments
        - totalPayment
      properties:
        paymentPeriods:
          type: integer
          enum: [12, 24, 36]
          example: 12
          description: Number of months for repayment
        monthlyPayments:
          type: number
          format: double
          example: 1312.50
          description: Monthly payment amount in ZAR
          minimum: 0
        totalPayment:
          type: number
          format: double
          example: 15750.00
          description: Total amount to be paid over the contract period
          minimum: 0
      description: Repayment calculation result for a specific term

    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: "Invalid amount provided"
          description: Error description
        timestamp:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
          description: When the error occurred
        path:
          type: string
          example: "/api/v1/contracts/repayments"
          description: Request path that caused the error
      description: Standard error response format

    CalculationRequest:
      type: object
      required:
        - amount
      properties:
        amount:
          type: number
          format: double
          example: 15000.00
          description: Device amount to finance in ZAR
          minimum: 100
          maximum: 100000
      description: Request payload for repayment calculations

  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: HTTP Basic Authentication for API endpoints
    
    sessionAuth:
      type: apiKey
      in: cookie
      name: JSESSIONID
      description: Session-based authentication for web interface

  parameters:
    AmountParameter:
      name: amount
      in: query
      required: true
      description: Device amount to finance (ZAR)
      schema:
        type: number
        format: double
        minimum: 100
        maximum: 100000
        example: 15000.00

  responses:
    BadRequest:
      description: Invalid request parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  examples:
    SampleCalculation:
      summary: Sample repayment calculation
      description: Example calculation for R15,000 device
      value:
        - paymentPeriods: 12
          monthlyPayments: 1312.50
          totalPayment: 15750.00
        - paymentPeriods: 24
          monthlyPayments: 687.50
          totalPayment: 16500.00
        - paymentPeriods: 36
          monthlyPayments: 479.17
          totalPayment: 17250.00

    SampleCustomer:
      summary: Sample customer registration
      description: Example customer details for registration
      value:
        name: "John Doe"
        email: "john.doe@example.com"

# Security is optional for most endpoints
# Web interface uses session-based auth
# API endpoints can use basic auth